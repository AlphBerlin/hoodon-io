generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?             @db.Uuid
  id                          String              @id @db.Uuid
  aud                         String?             @db.VarChar(255)
  role                        String?             @db.VarChar(255)
  email                       String?             @db.VarChar(255)
  encrypted_password          String?             @db.VarChar(255)
  email_confirmed_at          DateTime?           @db.Timestamptz(6)
  invited_at                  DateTime?           @db.Timestamptz(6)
  confirmation_token          String?             @db.VarChar(255)
  confirmation_sent_at        DateTime?           @db.Timestamptz(6)
  recovery_token              String?             @db.VarChar(255)
  recovery_sent_at            DateTime?           @db.Timestamptz(6)
  email_change_token_new      String?             @db.VarChar(255)
  email_change                String?             @db.VarChar(255)
  email_change_sent_at        DateTime?           @db.Timestamptz(6)
  last_sign_in_at             DateTime?           @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?           @db.Timestamptz(6)
  updated_at                  DateTime?           @db.Timestamptz(6)
  phone                       String?             @unique
  phone_confirmed_at          DateTime?           @db.Timestamptz(6)
  phone_change                String?             @default("")
  phone_change_token          String?             @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?           @db.Timestamptz(6)
  confirmed_at                DateTime?           @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?             @default("") @db.VarChar(255)
  email_change_confirm_status Int?                @default(0) @db.SmallInt
  banned_until                DateTime?           @db.Timestamptz(6)
  reauthentication_token      String?             @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?           @db.Timestamptz(6)
  is_sso_user                 Boolean             @default(false)
  deleted_at                  DateTime?           @db.Timestamptz(6)
  is_anonymous                Boolean             @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  channels                    channels[]
  hoods                       hoods[]
  profiles                    profiles?
  store_items_audit           store_items_audit[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_logs {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  profile_id String?   @db.Uuid
  action     String
  table_name String?
  record_id  String?   @db.Uuid
  old_data   Json?
  new_data   Json?
  ip_address String?   @db.Inet
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  profiles   profiles? @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([profile_id], map: "idx_audit_logs_profile")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model channel_events {
  id           Int       @id
  channel_id   Int?
  name         String?   @db.VarChar
  payload      String?
  triggered_by Int?
  created_at   DateTime? @db.Timestamp(6)
  channels     channels? @relation(fields: [channel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model channels {
  id             Int              @id @unique @default(autoincrement())
  name           String?          @db.VarChar
  status         channel_status?
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  created_by     String           @db.Uuid
  channel_events channel_events[]
  users          users            @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model chat_messages {
  id               String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  connection_id    String?           @db.Uuid
  sender_id        String?           @db.Uuid
  content          String
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  is_read          Boolean?          @default(false)
  user_connections user_connections? @relation(fields: [connection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles         profiles?         @relation(fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([connection_id], map: "idx_chat_messages_connection")
  @@index([sender_id], map: "idx_chat_messages_sender")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model daily_active_users {
  date            DateTime  @id @db.Date
  total_users     BigInt?   @default(0)
  new_users       BigInt?   @default(0)
  returning_users BigInt?   @default(0)
  total_messages  BigInt?   @default(0)
  total_calls     BigInt?   @default(0)
  total_matches   BigInt?   @default(0)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([date], map: "idx_daily_active_users_date")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model hoods {
  id          BigInt   @id(map: "hood_pkey") @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  created_by  String?  @db.Uuid
  is_public   Boolean? @default(false)
  url         String?  @db.VarChar
  custom_size Json?    @db.Json
  name        String?  @db.VarChar
  description String?
  carousel    Json?    @db.Json
  users       users?   @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "hood_created_by_fkey")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model interests {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name              String              @unique
  category          String?
  profile_interests profile_interests[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profile_images {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  profile_id String?   @db.Uuid
  image_url  String
  is_primary Boolean?  @default(false)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  profiles   profiles? @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([profile_id], map: "idx_profile_images_profile_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profile_interests {
  profile_id  String    @db.Uuid
  interest_id String    @db.Uuid
  interests   interests @relation(fields: [interest_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profiles    profiles  @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([profile_id, interest_id])
  @@index([profile_id], map: "idx_profile_interests_profile_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id                                                    String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id                                               String                    @unique @db.Uuid
  display_name                                          String
  bio                                                   String?
  gender                                                String?
  birth_date                                            DateTime                  @db.Date
  location_p                                            Unsupported("point")?
  created_at                                            DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at                                            DateTime?                 @default(now()) @db.Timestamptz(6)
  location                                              String?                   @db.VarChar
  avatar_url                                            String?                   @db.VarChar
  audit_logs                                            audit_logs[]
  chat_messages                                         chat_messages[]
  profile_images                                        profile_images[]
  profile_interests                                     profile_interests[]
  users                                                 users                     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_app_configs                                      user_app_configs?
  user_connections_user_connections_user_id_1Toprofiles user_connections[]        @relation("user_connections_user_id_1Toprofiles")
  user_connections_user_connections_user_id_2Toprofiles user_connections[]        @relation("user_connections_user_id_2Toprofiles")
  user_engagement_metrics                               user_engagement_metrics[]
  user_hoods                                            user_hoods[]
  video_calls_video_calls_caller_idToprofiles           video_calls[]             @relation("video_calls_caller_idToprofiles")
  video_calls_video_calls_receiver_idToprofiles         video_calls[]             @relation("video_calls_receiver_idToprofiles")

  @@index([user_id], map: "idx_profiles_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model store_analytics {
  id                 String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  store_item_id      String?      @db.Uuid
  total_purchases    BigInt?      @default(0)
  total_revenue      Decimal?     @default(0) @db.Decimal
  daily_purchases    BigInt?      @default(0)
  daily_revenue      Decimal?     @default(0) @db.Decimal
  weekly_purchases   BigInt?      @default(0)
  weekly_revenue     Decimal?     @default(0) @db.Decimal
  monthly_purchases  BigInt?      @default(0)
  monthly_revenue    Decimal?     @default(0) @db.Decimal
  last_purchase_date DateTime?    @db.Timestamptz(6)
  updated_at         DateTime?    @default(now()) @db.Timestamptz(6)
  store_items        store_items? @relation(fields: [store_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([store_item_id], map: "idx_store_analytics_item")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model store_items {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name              String
  description       String?
  price             Decimal             @db.Decimal
  hood_url          String
  preview_image_url String?
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  is_available      Boolean?            @default(true)
  store_analytics   store_analytics[]
  store_items_audit store_items_audit[]
  user_hoods        user_hoods[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model store_items_audit {
  id            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  store_item_id String?      @db.Uuid
  action        String
  old_price     Decimal?     @db.Decimal
  new_price     Decimal?     @db.Decimal
  old_status    Boolean?
  new_status    Boolean?
  changed_by    String?      @db.Uuid
  changed_at    DateTime?    @default(now()) @db.Timestamptz(6)
  users         users?       @relation(fields: [changed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  store_items   store_items? @relation(fields: [store_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([store_item_id], map: "idx_store_items_audit_item")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_app_configs {
  profile_id               String    @id @db.Uuid
  notification_preferences Json?     @default("{\"calls\": true, \"matches\": true, \"messages\": true}")
  privacy_settings         Json?     @default("{\"show_last_seen\": true, \"show_online_status\": true}")
  theme_preference         String?   @default("light")
  updated_at               DateTime? @default(now()) @db.Timestamptz(6)
  profiles                 profiles  @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_connections {
  id                                            String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id_1                                     String?         @db.Uuid
  user_id_2                                     String?         @db.Uuid
  status                                        String?
  created_at                                    DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime?       @default(now()) @db.Timestamptz(6)
  chat_messages                                 chat_messages[]
  profiles_user_connections_user_id_1Toprofiles profiles?       @relation("user_connections_user_id_1Toprofiles", fields: [user_id_1], references: [id], onDelete: NoAction, onUpdate: NoAction)
  profiles_user_connections_user_id_2Toprofiles profiles?       @relation("user_connections_user_id_2Toprofiles", fields: [user_id_2], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id_1, user_id_2], map: "idx_user_connections_users")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_engagement_metrics {
  id                  String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  profile_id          String?                  @db.Uuid
  total_logins        BigInt?                  @default(0)
  total_matches       BigInt?                  @default(0)
  total_messages_sent BigInt?                  @default(0)
  total_calls_made    BigInt?                  @default(0)
  total_call_duration Unsupported("interval")? @default(dbgenerated("'00:00:00'::interval"))
  last_login          DateTime?                @db.Timestamptz(6)
  created_at          DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?                @default(now()) @db.Timestamptz(6)
  profiles            profiles?                @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([profile_id], map: "idx_user_engagement_profile")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_hoods {
  id            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  profile_id    String?      @db.Uuid
  store_item_id String?      @db.Uuid
  purchase_date DateTime?    @default(now()) @db.Timestamptz(6)
  is_equipped   Boolean?     @default(false)
  profiles      profiles?    @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  store_items   store_items? @relation(fields: [store_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([profile_id], map: "idx_user_hoods_profile_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model video_calls {
  id                                         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  channel_name                               String
  caller_id                                  String?   @db.Uuid
  receiver_id                                String?   @db.Uuid
  start_time                                 DateTime  @db.Timestamptz(6)
  end_time                                   DateTime? @db.Timestamptz(6)
  status                                     String?
  created_at                                 DateTime? @default(now()) @db.Timestamptz(6)
  profiles_video_calls_caller_idToprofiles   profiles? @relation("video_calls_caller_idToprofiles", fields: [caller_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  profiles_video_calls_receiver_idToprofiles profiles? @relation("video_calls_receiver_idToprofiles", fields: [receiver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([caller_id, receiver_id], map: "idx_video_calls_participants")
  @@schema("public")
}

model waitlist {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  email      String   @db.VarChar

  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum channel_status {
  AVAILABLE
  IDLE
  DELETED
  OCCUPIED
  CREATED

  @@schema("public")
}

enum user_status {
  AVAILABLE
  IDLE
  IN_CALL
  OFFLINE

  @@schema("public")
}
